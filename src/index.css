
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* Default HSL values for primary color */
    --primary-hue: 260;
    --primary-saturation: 66%;
    --primary-lightness: 75%;
    
    --background: 260 50% 98%;
    --foreground: 260 10% 10%;

    --card: 0 0% 100%;
    --card-foreground: 260 10% 10%;

    --popover: 0 0% 100%;
    --popover-foreground: 260 10% 10%;

    /* Use HSL values for primary */
    --primary: var(--primary-hue) var(--primary-saturation) var(--primary-lightness);
    --primary-foreground: 0 0% 100%;

    --secondary: 260 25% 94%;
    --secondary-foreground: 260 30% 30%;

    --muted: 260 20% 96%;
    --muted-foreground: 260 10% 45%;

    --accent: 260 66% 90%;
    --accent-foreground: 260 30% 30%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 100%;

    --border: 260 25% 90%;
    --input: 260 25% 90%;
    --ring: var(--primary-hue) var(--primary-saturation) var(--primary-lightness);

    --radius: 1rem;

    --sidebar-background: 0 0% 98%;
    --sidebar-foreground: 260 10% 45%;
    --sidebar-primary: var(--primary-hue) var(--primary-saturation) var(--primary-lightness);
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 260 25% 94%;
    --sidebar-accent-foreground: 260 30% 30%;
    --sidebar-border: 260 25% 90%;
    --sidebar-ring: var(--primary-hue) var(--primary-saturation) var(--primary-lightness);
    
    /* Add NeuroSpark theme colors with references to the primary */
    --neuro-purple: hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness));
    --neuro-dark-purple: hsl(var(--primary-hue), calc(var(--primary-saturation) - 10%), calc(var(--primary-lightness) - 15%));
    --neuro-light-purple: hsl(var(--primary-hue), calc(var(--primary-saturation) + 5%), calc(var(--primary-lightness) + 10%));
  }

  .dark {
    --background: 260 20% 10%;
    --foreground: 0 0% 95%;

    --card: 260 20% 12%;
    --card-foreground: 0 0% 95%;

    --popover: 260 20% 12%;
    --popover-foreground: 0 0% 95%;

    /* Keep primary from dynamic HSL values */
    --primary: var(--primary-hue) var(--primary-saturation) var(--primary-lightness);
    --primary-foreground: 0 0% 100%;

    --secondary: 260 15% 20%;
    --secondary-foreground: 0 0% 95%;

    --muted: 260 15% 20%;
    --muted-foreground: 260 10% 70%;

    --accent: 260 15% 25%;
    --accent-foreground: 0 0% 95%;

    --destructive: 0 62.8% 60.6%;
    --destructive-foreground: 0 0% 95%;

    --border: 260 15% 25%;
    --input: 260 15% 25%;
    --ring: var(--primary-hue) var(--primary-saturation) var(--primary-lightness);

    --sidebar-background: 260 20% 12%;
    --sidebar-foreground: 0 0% 95%;
    --sidebar-primary: var(--primary-hue) var(--primary-saturation) var(--primary-lightness);
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 260 15% 20%;
    --sidebar-accent-foreground: 0 0% 95%;
    --sidebar-border: 260 15% 25%;
    --sidebar-ring: var(--primary-hue) var(--primary-saturation) var(--primary-lightness);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
}

@layer components {
  .glass {
    @apply bg-white/30 dark:bg-white/10 backdrop-blur-md border border-white/40 dark:border-white/10 shadow-lg;
  }
  
  .card-3d {
    transform-style: preserve-3d;
    perspective: 1000px;
  }
  
  .card-front, .card-back {
    backface-visibility: hidden;
    transform-style: preserve-3d;
    transition: transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    @apply absolute inset-0;
  }
  
  .card-back {
    transform: rotateY(180deg);
  }
  
  .flipped .card-front {
    transform: rotateY(180deg);
  }
  
  .flipped .card-back {
    transform: rotateY(0deg);
  }

  /* Add new animations */
  @keyframes float {
    0% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
    100% { transform: translateY(0px); }
  }

  .animate-float {
    animation: float 3s ease-in-out infinite;
  }

  @keyframes pulse-ring {
    0% { transform: scale(.85); opacity: 0.2; }
    50% { opacity: 0.5; }
    100% { transform: scale(1.3); opacity: 0; }
  }

  .animate-pulse-ring:before {
    content: "";
    @apply absolute inset-0 rounded-full;
    animation: pulse-ring 2s cubic-bezier(0.455, 0.03, 0.515, 0.955) infinite;
    z-index: -1;
  }

  @keyframes bounce-subtle {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-3px); }
  }

  .animate-bounce-subtle {
    animation: bounce-subtle 2s infinite;
  }
  
  @keyframes shake {
    0% { transform: translateX(0); }
    25% { transform: translateX(-5px); }
    50% { transform: translateX(5px); }
    75% { transform: translateX(-5px); }
    100% { transform: translateX(0); }
  }

  .animate-shake {
    animation: shake 0.5s cubic-bezier(.36,.07,.19,.97) both;
  }
  
  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in {
    animation: fade-in 0.4s ease forwards;
  }
  
  @keyframes scale-in {
    from {
      opacity: 0;
      transform: scale(0.9);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  .animate-scale-in {
    animation: scale-in 0.3s ease forwards;
  }
  
  .hover-scale {
    @apply transition-transform duration-200;
  }
  
  .hover-scale:hover {
    transform: scale(1.05);
  }
  
  .hover-glow:hover {
    box-shadow: 0 0 20px hsl(var(--primary));
  }
  
  @keyframes shimmer {
    0% { background-position: -1000px 0; }
    100% { background-position: 1000px 0; }
  }
  
  .animate-shimmer {
    animation: shimmer 2s infinite linear;
    background: linear-gradient(to right, transparent 0%, rgba(255,255,255,0.2) 50%, transparent 100%);
    background-size: 1000px 100%;
  }
  
  .story-link {
    @apply relative inline-block after:content-[''] after:absolute after:w-full after:scale-x-0 after:h-0.5 after:bottom-0 after:left-0 after:bg-primary after:origin-bottom-right after:transition-transform after:duration-300 hover:after:scale-x-100 hover:after:origin-bottom-left;
  }
  
  /* New cursor trail effect */
  @keyframes cursor-trail {
    0% { transform: scale(1); opacity: 1; }
    100% { transform: scale(0); opacity: 0; }
  }
  
  .cursor-trail-dot {
    position: absolute;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background-color: hsl(var(--primary));
    pointer-events: none;
    animation: cursor-trail 0.8s linear forwards;
    z-index: 9999;
  }
  
  /* New pop animation */
  @keyframes pop {
    0% { transform: scale(0.8); opacity: 0; }
    50% { transform: scale(1.1); opacity: 1; }
    100% { transform: scale(1); opacity: 1; }
  }
  
  .animate-pop {
    animation: pop 0.3s ease-out forwards;
  }
  
  /* New typing animation */
  @keyframes typing {
    from { width: 0 }
    to { width: 100% }
  }

  @keyframes blink-caret {
    from, to { border-color: transparent }
    50% { border-color: hsl(var(--primary)); }
  }

  .typing-effect {
    display: inline-block;
    overflow: hidden;
    white-space: nowrap;
    border-right: 3px solid;
    max-width: fit-content;
    animation: 
      typing 3.5s steps(40, end),
      blink-caret 0.75s step-end infinite;
  }
  
  /* New badge animation */
  @keyframes badge-pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.1); filter: brightness(1.2); }
    100% { transform: scale(1); }
  }
  
  .animate-badge-pulse {
    animation: badge-pulse 2s ease-in-out infinite;
  }
  
  /* Card hover effects */
  .card-hover {
    transition: all 0.3s ease;
  }
  
  .card-hover:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  }
  
  /* Consistent deck card style */
  .deck-card {
    @apply relative overflow-hidden rounded-xl p-6 shadow-lg transition-all duration-300 
    bg-gradient-to-br from-primary/10 to-primary/5 
    hover:from-primary/20 hover:to-primary/10 hover:shadow-xl 
    border border-primary/20 hover:border-primary/40;
  }
}

.dark .light-only {
  display: none;
}

.dark-only {
  display: none;
}

.dark .dark-only {
  display: block;
}

/* New flashy animations */
.text-gradient {
  @apply bg-clip-text text-transparent bg-gradient-to-r from-primary to-primary/70;
}

.card-shine {
  position: relative;
  overflow: hidden;
}

.card-shine::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 50%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  transition: 0.5s;
}

.card-shine:hover::after {
  left: 100%;
}
